paths:
  /api/pets:
    get:
      summary: Obtener todos los animales registrados.
      tags:
        - Pets
      responses:
        "200":
          description: Se obtuvieron todos los animales correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Pet"
        "500":
          description: Error interno del servidor.

    post:
      summary: Crear un nuevo animal.
      tags:
        - Pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createPet"
      responses:
        "201":
          description: Animal creado correctamente.
        "400":
          description: Valores incompletos en la solicitud.
        "500":
          description: Error interno del servidor.

  /api/pets/withimage:
    post:
      summary: Crear un nuevo animal con imagen.
      tags:
        - Pets
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del animal.
                specie:
                  type: string
                  description: Especie del animal.
                birthDate:
                  type: string
                  format: date
                  description: Fecha de nacimiento del animal.
                image:
                  type: string
                  format: binary
                  description: Imagen del animal.
      responses:
        "201":
          description: Animal con imagen creado correctamente.
        "400":
          description: Valores incompletos en la solicitud.
        "500":
          description: Error interno del servidor.

  /api/pets/{pid}:
    put:
      summary: Actualizar un animal por ID.
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del animal que se quiere actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updatePet"
      responses:
        "200":
          description: Animal actualizado correctamente.
        "404":
          description: Animal no encontrado.
        "500":
          description: Error interno del servidor.

    delete:
      summary: Eliminar un animal por ID.
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del animal que se quiere eliminar.
          schema:
            type: string
      responses:
        "200":
          description: Animal eliminado correctamente.
        "404":
          description: Animal no encontrado.
        "500":
          description: Error interno del servidor.

components:
  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: string
          description: ID del animal.
        name:
          type: string
          description: Nombre del animal.
        specie:
          type: string
          description: Especie del animal.
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del animal.
        image:
          type: string
          description: Ruta de la imagen del animal.
      example:
        _id: "abc123"
        name: "Bobby"
        specie: "Perro"
        birthDate: "2020-03-15"
        image: "/public/img/bobby.jpg"

  requestBodies:
    createPet:
      type: object
      properties:
        name:
          type: string
          description: Nombre del animal.
        specie:
          type: string
          description: Especie del animal.
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del animal.
      required:
        - name
        - specie
        - birthDate
      example:
        name: "Bobby"
        specie: "Perro"
        birthDate: "2020-03-15"

    updatePet:
      type: object
      properties:
        name:
          type: string
          description: Nombre del animal.
        specie:
          type: string
          description: Especie del animal.
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del animal.
        image:
          type: string
          description: Nueva ruta de la imagen del animal.
      example:
        name: "Bobby Updated"
        specie: "Perro"
        birthDate: "2021-03-15"
        image: "/public/img/bobby_updated.jpg"
